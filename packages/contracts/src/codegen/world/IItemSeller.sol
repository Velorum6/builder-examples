// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { ItemPriceData } from "./../tables/ItemPrice.sol";
import { ItemSellerERC20Data } from "./../tables/ItemSellerERC20.sol";

/**
 * @title IItemSeller
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface IItemSeller {
  function velorumtest11__registerERC20Token(uint256 smartObjectId, address tokenAddress, address receiver) external;

  function velorumtest11__updateERC20Receiver(uint256 smartObjectId, address receiver) external;

  function velorumtest11__setItemPrice(
    uint256 smartObjectId,
    uint256 inventoryItemId,
    uint256 price,
    uint256 targetQuantity
  ) external;

  function velorumtest11__unsetItemPrice(uint256 smartObjectId, uint256 inventoryItemId) external;

  function velorumtest11__purchaseItem(uint256 smartObjectId, uint256 inventoryItemId, uint256 quantity) external;

  function velorumtest11__sellItem(uint256 smartObjectId, uint256 inventoryItemId, uint256 quantity) external;

  function velorumtest11__collectTokens(uint256 smartObjectId) external;

  function velorumtest11__getItemPriceData(
    uint256 smartObjectId,
    uint256 inventoryItemId
  ) external returns (ItemPriceData memory);

  function velorumtest11__getERC20Data(uint256 smartObjectId) external returns (ItemSellerERC20Data memory);

  function velorumtest11__getContractAddress() external returns (address);

  function velorumtest11__getQuantity(uint256 smartObjectId, uint256 inventoryItemId) external returns (uint);
}
